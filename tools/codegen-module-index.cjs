// Generates the file at `src/modules.ts`, which contains an index of all the
// modules in the `src/modules` directory.

module.exports.moduleCodegen = ({ meta, options, dependencies }) => {
  const { path, glob } = dependencies;
  const pathP = path.posix;

  // Look for all the files in the `src/modules` directory
  const srcPath = pathP.normalize(pathP.join(__dirname, "../src/modules"));
  const filePaths = glob.globSync("src/modules/**/*.ts");

  const exports = [];
  for (const p of filePaths) {
    const fileName = path.basename(p, ".ts");

    // Handle Windows path separators
    const fixedPath = pathP.relative(srcPath, pathP.normalize(p.replace(/\\/g, "/")))
      .replace(/\.ts$/, ".js"); // ESM import paths

    exports.push({ name: fileName, path: fixedPath });
  }

  // Alphabetically sort the exports
  exports.sort((a, b) => a.path.localeCompare(b.path));

  // The actual funky codegen
  const importLines = exports.map(({ name, path }) => `import ${name} from "./modules/${path}";`);
  const exportLines = exports.map(({ name }) => `  ${name},`);

  return `// This file is generated by tools/codegen-module-index.cjs. Run \`pnpm lint:codegen\` to update it.
${importLines.join("\n")}
const modules = {
${exportLines.join("\n")}
} as const satisfies Record<string, typeof Module>;
`;
};
